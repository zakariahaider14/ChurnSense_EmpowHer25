# ============================================================================
# GOOGLE GEMINI API CONFIGURATION
# ============================================================================
# Your Google Gemini API key for the AI agent
# Get this from: Google Cloud Console > APIs & Services > Credentials
GEMINI_API_KEY=

# ============================================================================
# GOOGLE SHEETS CONFIGURATION
# ============================================================================
# The ID of your Google Sheet containing customer data
# Extract from URL: https://docs.google.com/spreadsheets/d/{SHEET_ID}/edit
GOOGLE_SHEETS_ID=

# Path to the service account JSON file for Google Sheets API authentication
# This file should be in the same directory as your .env.local
GOOGLE_SHEETS_CREDENTIALS_PATH=

# ============================================================================
# MODEL SERVICE CONFIGURATION
# ============================================================================
# URL where the FastAPI model service is running
# For local development: http://localhost:8000
# For cloud deployment: https://model-service-url-from-cloud-run
MODEL_SERVICE_URL=http://localhost:8000

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
# MySQL connection string for the application database
# Format: mysql://username:password@host:port/database_name
# For local development with Docker:
#   mysql://root:password@localhost:3306/churn_db
# For Google Cloud SQL:
#   mysql://churn_user:password@cloudsql-instance-ip:3306/churn_db
DATABASE_URL=

# ============================================================================
# AUTHENTICATION & SECURITY
# ============================================================================
# Secret key for signing JWT tokens and session cookies
# Generate a strong random string: openssl rand -hex 32
# IMPORTANT: Change this in production!
JWT_SECRET=

ENVIRONMENT=dev